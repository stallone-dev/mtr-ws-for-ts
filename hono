import { configure, getConsoleSink } from "@logtape";
import { getFileSink } from "jsr:@logtape/file";
import { Hono } from "jsr:@hono/hono";
import { AuthRequestDTO } from "~service/auth/auth.dto.ts";
import { authMethod } from "~service/auth/auth.service.ts";
import { WsBaseURL } from "~type/ws_config.type.ts";
import { WsAuth } from "~service/main.service.ts";

// await configure({
//     sinks: {
//         console: getConsoleSink(),
//         jsonl: getFileSink("log.jsonl", {
//             formatter: (record) =>
//                 JSON
//                     .stringify(record) + "\n",
//         }),
//     },
//     loggers: [
//         {
//             category: "mtr-ws-for-ts",
//             sinks: ["console", "jsonl"],
//             lowestLevel: "debug",
//         },
//     ],
// });

const app = new Hono();

app.get("/", async () => {
    const result = await WsAuth(WsBaseURL.SINIR, loginMock);
    console.log(result);
});

let loginMock = {
    cpfCnpj: "",
    senha: "",
    unidade: "",
} as AuthRequestDTO;

const env = Deno.env.toObject();
loginMock.cpfCnpj = env.SINIR_CPF_CNPJ;
loginMock.senha = "1";
loginMock.unidade = env.SINIR_UNIDADE;

Deno.serve(app.fetch);
