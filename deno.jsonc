{
    "tasks": {
        "test:dev": "deno task test --reporter=dot --watch",
        "test": "deno test --env-file=.env --ignore=./tests/services/receive/ --allow-all ./tests/",
        "fmt": "deno fmt --config=deno.jsonc ./src ./tests ./deno.jsonc",
        "lint": "deno lint --config=deno.jsonc ./src ./tests",

        // Coverage report configs, NEEDS lcov package on system
        "coverage:report": "deno task coverage ; deno coverage ./tests/coverage-log --lcov > ./tests/coverage-log/coverage.lcov ; genhtml -o ./tests/coverage-log ./tests/coverage-log/coverage.lcov",
        "coverage:dev": "deno task coverage ; deno coverage ./tests/coverage-log",
        "coverage": "deno task test --reporter=dot --coverage=./coverage-log"
    },

    // ======= Dependency area =======
    "imports": {
        // Relative local imports
        "~logger": "./src/configs/logger.ts",
        "~telemetry": "./src/configs/telemetry.ts",
        "~service/": "./src/services/",
        "~type/": "./src/internal_types/",
        "~class/": "./src/classes/",
        "~util/": "./src/utils/",

        // Testing packages
        // For more details see: https://docs.deno.com/runtime/fundamentals/testing/#writing-tests
        "@expect": "jsr:@std/expect@^1.0",
        "@testing": "jsr:@std/testing",

        // Dependencies
        "@zod": "npm:zod@^3.24.2",
        "@logtape": "jsr:@logtape/logtape@^0.12.0",
        "@opentelemetry": "npm:@opentelemetry/api@^1.9.0",
        "@ulid": "jsr:@std/ulid@^1.0.0",
        "@path": "jsr:@std/path@^1.0.9"
    },

    // Unstable features from DenoJS
    "unstable": ["otel"],
    "nodeModulesDir": "auto",
    // "compilerOptions": {
    //     "lib": ["dom", "esnext"]
    // },

    // ======= JSR publish area =======
    "name": "mtr-ws-wrapper-ts",
    "version": "0.1.0",
    "exports": "./mod.ts",
    "license": "MPL-2.0",

    "publish": {
        "exclude": ["./tests", ".editorconfig", ".vscode", ".github", ".zed", ".env*"]
    },

    // ======= Source code standardization area =======

    // Formatter for source code styling
    // For more details see https://docs.deno.com/runtime/fundamentals/linting_and_formatting/#available-options
    "fmt": {
        "lineWidth": 120,
        "indentWidth": 4,
        "useTabs": false,
        "semiColons": true,
        "singleQuote": false,
        "proseWrap": "preserve",
        "newLineKind": "lf"
    },

    // Linter for
    // For more details see https://lint.deno.land/?q=&all=on
    "lint": {
        "exclude": ["!*.ts"],
        "rules": {
            "tags": ["recommended"],
            "include": [
                "default-param-last",
                "eqeqeq",
                "explicit-function-return-type",
                "explicit-module-boundary-types",
                "guard-for-in",
                "no-await-in-loop",
                "no-boolean-literal-for-arguments",
                "no-console",
                "no-const-assign",
                "no-eval",
                "no-external-import",
                "no-inferrable-types",
                "no-non-null-asserted-optional-chain",
                "no-non-null-assertion",
                "no-self-compare",
                "no-sparse-arrays",
                "no-sync-fn-in-async-fn",
                "no-throw-literal",
                "no-undef",
                "no-useless-rename",
                "single-var-declarator",
                "triple-slash-reference",
                "verbatim-module-syntax"
            ]
        }
    }
}
